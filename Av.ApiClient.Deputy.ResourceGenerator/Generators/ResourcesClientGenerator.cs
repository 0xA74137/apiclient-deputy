using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Av.ApiClients.Deputy.ResourceGenerator.Generators
{
    internal class ResourcesClientGenerator(IEnumerable<string> resources)
    {
        public string Generate()
        {
            var sb = new IndentableStringBuilder(new string(' ', 4));
            AddPreamble(sb);
            sb.AppendLine();
            AddInterface(sb);
            sb.AppendLine();
            AddImplementation(sb);
            sb.AppendLine();

            return sb.ToString();
        }

        private void AddPreamble(IndentableStringBuilder sb)
        {
            sb.AppendLine("// <auto-generated/>");
            sb.AppendLine("#nullable enable");
            sb.AppendLine("using Av.ApiClients.Deputy.Models.Resources;");
            sb.AppendLine("using Task = Av.ApiClients.Deputy.Models.Resources.Task;");
            sb.AppendLine();
            sb.AppendLine("namespace Av.ApiClients.Deputy.Clients;");
        }

        private void AddInterface(IndentableStringBuilder sb)
        {
            sb.AppendLine("public partial interface IResourcesClient");
            sb.AppendLine("{");
            sb.Indent();

            foreach (var resource in resources)
                AddInterfaceProperty(sb, resource);

            sb.Dedent();
            sb.AppendLine("}");
        }

        private void AddImplementation(IndentableStringBuilder sb)
        {
            sb.AppendLine("internal partial class ResourcesClient");
            sb.AppendLine("{");
            sb.Indent();

            var fields = new List<string>();
            var props = new List<string>();
            foreach (var resource in resources)
            {
                var (field, prop) = AddImplementationProperty(resource);
                fields.Add(field);
                props.Add(prop);
            }

            foreach(var field in fields)
                sb.AppendLine(field);

            sb.AppendLine();

            foreach(var prop in props)
                sb.AppendLine(prop);

            sb.Dedent();
            sb.AppendLine("}");
        }

        private (string field, string prop) AddImplementationProperty(string resourceName)
            => (
                $"private ResourceClient<{resourceName}>? __{resourceName};",
                $"public IResourceClient<{resourceName}> {resourceName}s => " +
                    $"__{resourceName} ??= new ResourceClient<{resourceName}>(_httpClient);"
            );

        private void AddInterfaceProperty(IndentableStringBuilder sb, string resourceName)
        {
            sb.AppendLine($"IResourceClient<{resourceName}> {resourceName}s {{ get; }}");
        }
    }
}
