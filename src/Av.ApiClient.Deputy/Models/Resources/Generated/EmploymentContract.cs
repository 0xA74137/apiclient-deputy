// <auto-generated/>
#nullable enable
using System.Text.Json.Serialization;
using Av.ApiClients.Deputy.Converters;
using Av.ApiClients.Deputy.Models.Resources;

namespace Av.ApiClients.Deputy.Models.Resources;

[JsonConverter(typeof(ResourceConverter<EmploymentContract>))]
public class EmploymentContract : IResource
{
    [JsonPropertyName("Id")]
    public long? Id { get; set; }
    [JsonPropertyName("Code")]
    public string? Code { get; set; }
    [JsonPropertyName("Name")]
    public string? Name { get; set; }
    [JsonPropertyName("Description")]
    public string? Description { get; set; }
    [JsonPropertyName("EmploymentBasis")]
    public long? EmploymentBasis { get; set; }
    [JsonPropertyName("EmploymentCategory")]
    public long? EmploymentCategory { get; set; }
    [JsonPropertyName("EmploymentStatus")]
    public long? EmploymentStatus { get; set; }
    [JsonPropertyName("EmploymentCondition")]
    public long? EmploymentCondition { get; set; }
    [JsonPropertyName("BasePayRule")]
    public long? BasePayRule { get; set; }
    [JsonPropertyName("StressProfile")]
    public long? StressProfile { get; set; }
    [JsonPropertyName("StartDate")]
    public DateTimeOffset? StartDate { get; set; }
    [JsonPropertyName("EndDate")]
    public DateTimeOffset? EndDate { get; set; }
    [JsonPropertyName("PeriodType")]
    public long? PeriodType { get; set; }
    [JsonPropertyName("File")]
    public long? File { get; set; }
    [JsonPropertyName("StrictLeaveApproval")]
    public bool? StrictLeaveApproval { get; set; }
    [JsonPropertyName("Award")]
    public string? Award { get; set; }
    [JsonPropertyName("EmploymentSubType")]
    public string? EmploymentSubType { get; set; }
    [JsonPropertyName("AwardStartDate")]
    public DateTimeOffset? AwardStartDate { get; set; }
    [JsonPropertyName("Creator")]
    public long? Creator { get; set; }
    [JsonPropertyName("Created")]
    public DateTimeOffset? Created { get; set; }
    [JsonPropertyName("Modified")]
    public DateTimeOffset? Modified { get; set; }
    [JsonPropertyName("PpId")]
    public string? PpId { get; set; }
    [JsonPropertyName("CountryId")]
    public long? CountryId { get; set; }


    [JsonConverter(typeof(JoinConverter<EmploymentCondition>))]
    public Join<EmploymentCondition>? EmploymentConditionObject { get; set; }

    [JsonConverter(typeof(JoinConverter<PayRules>))]
    public Join<PayRules>? BasePayRuleObject { get; set; }

    [JsonConverter(typeof(JoinConverter<Country>))]
    public Join<Country>? Country { get; set; }
}

