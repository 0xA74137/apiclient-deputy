// <auto-generated/>
#nullable enable
using System.Text.Json.Serialization;
using Av.ApiClients.Deputy.Converters;
using Av.ApiClients.Deputy.Models.Resources;

namespace Av.ApiClients.Deputy.Models.Resources;

[JsonConverter(typeof(ResourceConverter<OperationalUnit>))]
public class OperationalUnit : IResource
{
    [JsonPropertyName("Id")]
    public long? Id { get; set; }
    [JsonPropertyName("Creator")]
    public long? Creator { get; set; }
    [JsonPropertyName("Created")]
    public DateTimeOffset? Created { get; set; }
    [JsonPropertyName("Modified")]
    public DateTimeOffset? Modified { get; set; }
    [JsonPropertyName("Company")]
    public long? Company { get; set; }
    [JsonPropertyName("WorkType")]
    public string? WorkType { get; set; }
    [JsonPropertyName("ParentOperationalUnit")]
    public long? ParentOperationalUnit { get; set; }
    [JsonPropertyName("OperationalUnitName")]
    public string? OperationalUnitName { get; set; }
    [JsonPropertyName("Active")]
    public bool? Active { get; set; }
    [JsonPropertyName("PayrollExportName")]
    public string? PayrollExportName { get; set; }
    [JsonPropertyName("Address")]
    public long? Address { get; set; }
    [JsonPropertyName("Contact")]
    public long? Contact { get; set; }
    [JsonPropertyName("RosterSortOrder")]
    public long? RosterSortOrder { get; set; }
    [JsonPropertyName("ShowOnRoster")]
    public bool? ShowOnRoster { get; set; }
    [JsonPropertyName("Colour")]
    public string? Colour { get; set; }
    [JsonPropertyName("RosterActiveHoursSchedule")]
    public long? RosterActiveHoursSchedule { get; set; }
    [JsonPropertyName("DailyRosterBudget")]
    public double? DailyRosterBudget { get; set; }
    [JsonPropertyName("OperationalUnitType")]
    public long? OperationalUnitType { get; set; }


    [JsonConverter(typeof(JoinConverter<Company>))]
    public Join<Company>? CompanyObject { get; set; }

    [JsonConverter(typeof(JoinConverter<OperationalUnit>))]
    public Join<OperationalUnit>? ParentOperationalUnitObject { get; set; }

    [JsonConverter(typeof(JoinConverter<Address>))]
    public Join<Address>? AddressObject { get; set; }

    [JsonConverter(typeof(JoinConverter<Contact>))]
    public Join<Contact>? ContactObject { get; set; }

    [JsonConverter(typeof(JoinConverter<Schedule>))]
    public Join<Schedule>? RosterActiveHoursScheduleObject { get; set; }
}

