// <auto-generated/>
#nullable enable
using System.Text.Json.Serialization;
using Av.ApiClients.Deputy.Converters;
using Av.ApiClients.Deputy.Models.Resources;

namespace Av.ApiClients.Deputy.Models.Resources;

[JsonConverter(typeof(ResourceConverter<Leave>))]
public class Leave : IResource
{
    [JsonPropertyName("Id")]
    public long? Id { get; set; }
    [JsonPropertyName("Employee")]
    public long? Employee { get; set; }
    [JsonPropertyName("EmployeeHistory")]
    public long? EmployeeHistory { get; set; }
    [JsonPropertyName("Company")]
    public long? Company { get; set; }
    [JsonPropertyName("LeaveRule")]
    public long? LeaveRule { get; set; }
    [JsonPropertyName("Start")]
    public long? Start { get; set; }
    [JsonPropertyName("DateStart")]
    public DateTimeOffset? DateStart { get; set; }
    [JsonPropertyName("End")]
    public long? End { get; set; }
    [JsonPropertyName("DateEnd")]
    public DateTimeOffset? DateEnd { get; set; }
    [JsonPropertyName("Days")]
    public double? Days { get; set; }
    [JsonPropertyName("ApproverTime")]
    public long? ApproverTime { get; set; }
    [JsonPropertyName("ApproverPay")]
    public long? ApproverPay { get; set; }
    [JsonPropertyName("Comment")]
    public string? Comment { get; set; }
    [JsonPropertyName("Status")]
    public long? Status { get; set; }
    [JsonPropertyName("ApprovalComment")]
    public string? ApprovalComment { get; set; }
    [JsonPropertyName("TotalHours")]
    public double? TotalHours { get; set; }
    [JsonPropertyName("ExternalId")]
    public string? ExternalId { get; set; }
    [JsonPropertyName("AllDay")]
    public bool? AllDay { get; set; }
    [JsonPropertyName("Creator")]
    public long? Creator { get; set; }
    [JsonPropertyName("Created")]
    public DateTimeOffset? Created { get; set; }
    [JsonPropertyName("Modified")]
    public DateTimeOffset? Modified { get; set; }


    [JsonConverter(typeof(JoinConverter<Employee>))]
    public Join<Employee>? EmployeeObject { get; set; }

    [JsonConverter(typeof(JoinConverter<EmployeeHistory>))]
    public Join<EmployeeHistory>? EmployeeHistoryObject { get; set; }

    [JsonConverter(typeof(JoinConverter<Company>))]
    public Join<Company>? CompanyObject { get; set; }

    [JsonConverter(typeof(JoinConverter<LeaveRules>))]
    public Join<LeaveRules>? LeaveRuleObject { get; set; }
}

