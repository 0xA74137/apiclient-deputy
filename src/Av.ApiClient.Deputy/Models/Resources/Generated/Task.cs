// <auto-generated/>
#nullable enable
using System.Text.Json.Serialization;
using Av.ApiClients.Deputy.Converters;
using Av.ApiClients.Deputy.Models.Resources;

namespace Av.ApiClients.Deputy.Models.Resources;

[JsonConverter(typeof(ResourceConverter<Task>))]
public class Task : IResource
{
    [JsonPropertyName("Id")]
    public long? Id { get; set; }
    [JsonPropertyName("TaskSetupId")]
    public long? TaskSetupId { get; set; }
    [JsonPropertyName("OpUnitId")]
    public long? OpUnitId { get; set; }
    [JsonPropertyName("GroupId")]
    public long? GroupId { get; set; }
    [JsonPropertyName("DayTimestamp")]
    public long? DayTimestamp { get; set; }
    [JsonPropertyName("Date")]
    public DateTimeOffset? Date { get; set; }
    [JsonPropertyName("OrigDayTimestamp")]
    public long? OrigDayTimestamp { get; set; }
    [JsonPropertyName("OrigDate")]
    public DateTimeOffset? OrigDate { get; set; }
    [JsonPropertyName("AvailableAfterTimestamp")]
    public long? AvailableAfterTimestamp { get; set; }
    [JsonPropertyName("DueDate")]
    public DateTimeOffset? DueDate { get; set; }
    [JsonPropertyName("DueTimestamp")]
    public long? DueTimestamp { get; set; }
    [JsonPropertyName("RepeatIfNotCompleted")]
    public bool? RepeatIfNotCompleted { get; set; }
    [JsonPropertyName("SortOrder")]
    public long? SortOrder { get; set; }
    [JsonPropertyName("Type")]
    public long? Type { get; set; }
    [JsonPropertyName("Question")]
    public string? Question { get; set; }
    [JsonPropertyName("Answer")]
    public string? Answer { get; set; }
    [JsonPropertyName("Comment")]
    public string? Comment { get; set; }
    [JsonPropertyName("UserEntry")]
    public long? UserEntry { get; set; }
    [JsonPropertyName("UserPerformTask")]
    public long? UserPerformTask { get; set; }
    [JsonPropertyName("UserResponsible")]
    public long? UserResponsible { get; set; }
    [JsonPropertyName("Created")]
    public DateTimeOffset? Created { get; set; }
    [JsonPropertyName("Modified")]
    public DateTimeOffset? Modified { get; set; }
    [JsonPropertyName("TsCompleted")]
    public long? TsCompleted { get; set; }
    [JsonPropertyName("Start")]
    public long? Start { get; set; }
    [JsonPropertyName("End")]
    public long? End { get; set; }
    [JsonPropertyName("Duration")]
    public long? Duration { get; set; }


    [JsonConverter(typeof(JoinConverter<TaskSetup>))]
    public Join<TaskSetup>? TaskSetup { get; set; }

    [JsonConverter(typeof(JoinConverter<OperationalUnit>))]
    public Join<OperationalUnit>? OpUnit { get; set; }

    [JsonConverter(typeof(JoinConverter<TaskGroup>))]
    public Join<TaskGroup>? Group { get; set; }
}

