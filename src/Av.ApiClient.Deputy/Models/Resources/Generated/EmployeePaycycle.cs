// <auto-generated/>
#nullable enable
using System.Text.Json.Serialization;
using Av.ApiClients.Deputy.Converters;
using Av.ApiClients.Deputy.Models.Resources;

namespace Av.ApiClients.Deputy.Models.Resources;

[JsonConverter(typeof(ResourceConverter<EmployeePaycycle>))]
public class EmployeePaycycle : IResource
{
    [JsonPropertyName("Id")]
    public long? Id { get; set; }
    [JsonPropertyName("EmployeeId")]
    public long? EmployeeId { get; set; }
    [JsonPropertyName("EmployeeAgreementId")]
    public long? EmployeeAgreementId { get; set; }
    [JsonPropertyName("PeriodId")]
    public long? PeriodId { get; set; }
    [JsonPropertyName("RecommendedLoadings")]
    public bool? RecommendedLoadings { get; set; }
    [JsonPropertyName("Timesheets")]
    public long? Timesheets { get; set; }
    [JsonPropertyName("TimesheetsTimeApproved")]
    public long? TimesheetsTimeApproved { get; set; }
    [JsonPropertyName("TimesheetsPayApproved")]
    public long? TimesheetsPayApproved { get; set; }
    [JsonPropertyName("PaycycleRules")]
    public long? PaycycleRules { get; set; }
    [JsonPropertyName("PaycycleRulesApproved")]
    public long? PaycycleRulesApproved { get; set; }
    [JsonPropertyName("Exported")]
    public bool? Exported { get; set; }
    [JsonPropertyName("ExportId")]
    public long? ExportId { get; set; }
    [JsonPropertyName("Paid")]
    public bool? Paid { get; set; }
    [JsonPropertyName("TimeTotal")]
    public double? TimeTotal { get; set; }
    [JsonPropertyName("CostTotal")]
    public double? CostTotal { get; set; }
    [JsonPropertyName("EmployeeAgreementHistoryId")]
    public long? EmployeeAgreementHistoryId { get; set; }
    [JsonPropertyName("Creator")]
    public long? Creator { get; set; }
    [JsonPropertyName("Created")]
    public DateTimeOffset? Created { get; set; }
    [JsonPropertyName("Modified")]
    public DateTimeOffset? Modified { get; set; }


    [JsonConverter(typeof(JoinConverter<Employee>))]
    public Join<Employee>? Employee { get; set; }

    [JsonConverter(typeof(JoinConverter<EmployeeAgreement>))]
    public Join<EmployeeAgreement>? EmployeeAgreement { get; set; }

    [JsonConverter(typeof(JoinConverter<CompanyPeriod>))]
    public Join<CompanyPeriod>? Period { get; set; }
}

