// <auto-generated/>
#nullable enable
using System.Text.Json.Serialization;
using Av.ApiClients.Deputy.Converters;
using Av.ApiClients.Deputy.Models.Resources;

namespace Av.ApiClients.Deputy.Models.Resources;

[JsonConverter(typeof(ResourceConverter<EmployeeAgreement>))]
public class EmployeeAgreement : IResource
{
    [JsonPropertyName("Id")]
    public long? Id { get; set; }
    [JsonPropertyName("EmployeeId")]
    public long? EmployeeId { get; set; }
    [JsonPropertyName("PayPoint")]
    public long? PayPoint { get; set; }
    [JsonPropertyName("EmpType")]
    public long? EmpType { get; set; }
    [JsonPropertyName("CompanyName")]
    public string? CompanyName { get; set; }
    [JsonPropertyName("Active")]
    public bool? Active { get; set; }
    [JsonPropertyName("StartDate")]
    public DateTimeOffset? StartDate { get; set; }
    [JsonPropertyName("EndDate")]
    public DateTimeOffset? EndDate { get; set; }
    [JsonPropertyName("Contract")]
    public long? Contract { get; set; }
    [JsonPropertyName("SalaryPayRule")]
    public long? SalaryPayRule { get; set; }
    [JsonPropertyName("ContractFile")]
    public long? ContractFile { get; set; }
    [JsonPropertyName("PayrollId")]
    public string? PayrollId { get; set; }
    [JsonPropertyName("PayPeriod")]
    public long? PayPeriod { get; set; }
    [JsonPropertyName("HistoryId")]
    public long? HistoryId { get; set; }
    [JsonPropertyName("Creator")]
    public long? Creator { get; set; }
    [JsonPropertyName("Created")]
    public DateTimeOffset? Created { get; set; }
    [JsonPropertyName("Modified")]
    public DateTimeOffset? Modified { get; set; }
    [JsonPropertyName("BaseRate")]
    public double? BaseRate { get; set; }
    [JsonPropertyName("Config")]
    public string? Config { get; set; }


    [JsonConverter(typeof(JoinConverter<Employee>))]
    public Join<Employee>? Employee { get; set; }

    [JsonConverter(typeof(JoinConverter<Company>))]
    public Join<Company>? PayPointObject { get; set; }

    [JsonConverter(typeof(JoinConverter<EmploymentContract>))]
    public Join<EmploymentContract>? ContractObject { get; set; }

    [JsonConverter(typeof(JoinConverter<PayRules>))]
    public Join<PayRules>? SalaryPayRuleObject { get; set; }

    [JsonConverter(typeof(JoinConverter<PayPeriod>))]
    public Join<PayPeriod>? PayPeriodObject { get; set; }
}

