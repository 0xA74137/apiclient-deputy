// <auto-generated/>
#nullable enable
using System.Text.Json.Serialization;
using Av.ApiClients.Deputy.Converters;
using Av.ApiClients.Deputy.Models.Resources;

namespace Av.ApiClients.Deputy.Models.Resources;

[JsonConverter(typeof(ResourceConverter<TaskSetup>))]
public class TaskSetup : IResource
{
    [JsonPropertyName("Id")]
    public long? Id { get; set; }
    [JsonPropertyName("GroupId")]
    public long? GroupId { get; set; }
    [JsonPropertyName("Type")]
    public long? Type { get; set; }
    [JsonPropertyName("Parent")]
    public long? Parent { get; set; }
    [JsonPropertyName("Question")]
    public string? Question { get; set; }
    [JsonPropertyName("Default")]
    public string? Default { get; set; }
    [JsonPropertyName("SortOrder")]
    public long? SortOrder { get; set; }
    [JsonPropertyName("Schedule")]
    public long? Schedule { get; set; }
    [JsonPropertyName("OnYes")]
    public string? OnYes { get; set; }
    [JsonPropertyName("OnNo")]
    public string? OnNo { get; set; }
    [JsonPropertyName("RenderFunc")]
    public string? RenderFunc { get; set; }
    [JsonPropertyName("Active")]
    public bool? Active { get; set; }
    [JsonPropertyName("AvailableAfter")]
    public string? AvailableAfter { get; set; }
    [JsonPropertyName("RepeatIfNotCompleted")]
    public bool? RepeatIfNotCompleted { get; set; }
    [JsonPropertyName("Time")]
    public string? Time { get; set; }
    [JsonPropertyName("Section")]
    public string? Section { get; set; }
    [JsonPropertyName("Priority")]
    public string? Priority { get; set; }
    [JsonPropertyName("Helptext")]
    public string? Helptext { get; set; }
    [JsonPropertyName("SupercedePrev")]
    public bool? SupercedePrev { get; set; }
    [JsonPropertyName("Colour")]
    public string? Colour { get; set; }
    [JsonPropertyName("OnStart")]
    public string? OnStart { get; set; }
    [JsonPropertyName("OnSubmit")]
    public string? OnSubmit { get; set; }
    [JsonPropertyName("Duration")]
    public long? Duration { get; set; }
    [JsonPropertyName("Creator")]
    public long? Creator { get; set; }
    [JsonPropertyName("Created")]
    public DateTimeOffset? Created { get; set; }
    [JsonPropertyName("Modified")]
    public DateTimeOffset? Modified { get; set; }


    [JsonConverter(typeof(JoinConverter<TaskGroupSetup>))]
    public Join<TaskGroupSetup>? Group { get; set; }

    [JsonConverter(typeof(JoinConverter<Schedule>))]
    public Join<Schedule>? ScheduleObject { get; set; }
}

